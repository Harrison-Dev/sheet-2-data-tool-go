name: Release Go Binary

on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag name for release'
        required: true

permissions:
    contents: write
    packages: write

jobs:
  releases-matrix:
    name: Release Go Binary
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # build and publish in parallel: windows/amd64, darwin/amd64, darwin/arm64
        goos: [windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          - goarch: arm64
            goos: windows
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.19'
    
    - name: Build binary
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
        CGO_ENABLED: 0
      run: |
        mkdir -p bin
        if [ "$GOOS" = "windows" ]; then
          go build -o bin/excel-schema-generator.exe .
        else
          go build -o bin/excel-schema-generator .
        fi
    
    - name: Upload to release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          bin/excel-schema-generator*
        tag_name: ${{ github.event.inputs.tag_name || github.ref_name }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
  # Build universal binary for macOS
  build-macos-universal:
    name: Build macOS Universal Binary
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.19'
    
    - name: Build Universal Binary
      run: |
        chmod +x ./scripts/build_macos.sh
        ./scripts/build_macos.sh
    
    - name: Upload to release
      uses: softprops/action-gh-release@v1
      with:
        files: bin/excel-schema-generator
        tag_name: ${{ github.event.inputs.tag_name || github.ref_name }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}